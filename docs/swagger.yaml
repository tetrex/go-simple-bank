basePath: /
definitions:
  api.CreateAccountRequest:
    properties:
      currency:
        type: string
      owner:
        type: string
    required:
    - currency
    - owner
    type: object
  api.CreateUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  api.ListAccountRequest:
    properties:
      page_id:
        minimum: 1
        type: integer
      page_size:
        maximum: 10
        minimum: 5
        type: integer
    required:
    - page_id
    - page_size
    type: object
  api.TransferRequest:
    properties:
      amount:
        type: integer
      currency:
        enum:
        - USD
        - EUR
        - CAD
        type: string
      from_account_id:
        minimum: 1
        type: integer
      to_account_id:
        minimum: 1
        type: integer
    required:
    - amount
    - currency
    - from_account_id
    - to_account_id
    type: object
  util.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  util.OkResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Tetrex
  description: This is a backend api for simple bank
  license:
    name: MIT License
  title: API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: Gives us Server Time , To check health of server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.OkResponse'
        "500":
          description: Internal Server Error
          schema: {}
      summary: For health check, of server
      tags:
      - health
  /v1/account/:
    post:
      consumes:
      - application/json
      description: takes input of Owner,Currency , and creates account
      parameters:
      - description: CreateAccountRequest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.CreateAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.OkResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Creates account Of user
      tags:
      - v1/Account
  /v1/account/{id}:
    get:
      consumes:
      - application/json
      description: takes id of user and returns user account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.OkResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Gets User Account
      tags:
      - v1/Account
  /v1/accounts:
    post:
      consumes:
      - application/json
      description: takes pages and pagesize
      parameters:
      - description: ListAccountRequest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ListAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.OkResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Gets List Of User Account
      tags:
      - v1/Account
  /v1/transfer:
    post:
      consumes:
      - application/json
      description: takes input and transfers money from -> to
      parameters:
      - description: TransferRequest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.TransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.OkResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Transfer's money from Acc1 to Acc2
      tags:
      - v1/TransferMoney
  /v1/user/:
    post:
      consumes:
      - application/json
      description: returns user newly created user profile
      parameters:
      - description: CreateUserRequest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.OkResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Creates user profile
      tags:
      - v1/User
swagger: "2.0"
